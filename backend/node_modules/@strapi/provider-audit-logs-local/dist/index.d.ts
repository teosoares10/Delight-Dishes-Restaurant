import type { Strapi } from '@strapi/strapi';
interface Event {
    action: string;
    date: Date;
    userId: string | number;
    payload: Record<string, unknown>;
}
declare const _default: {
    register({ strapi }: {
        strapi: Strapi;
    }): Promise<{
        saveEvent(event: Event): Promise<any>;
        findMany(query: Record<string, unknown>): Promise<import("@strapi/strapi/lib/services/entity-service").PaginatedResult<"admin::audit-log", {
            populate: "user"[];
            fields: ("action" | "date" | "payload")[];
        }>>;
        findOne(id: `${number}` | number): Promise<import("@strapi/strapi/lib/services/entity-service").AnyEntity | null>;
        deleteExpiredEvents(expirationDate: Date): Promise<{
            count: number;
        }>;
    }>;
};
export = _default;
